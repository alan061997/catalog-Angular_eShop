{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/items/items.component.css","webpack:///./src/app/items/items.component.html","webpack:///./src/app/items/items.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<header>\\n  <nav class=\\\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Catalog</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarCollapse\\\" aria-controls=\\\"navbarCollapse\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarCollapse\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">Link</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link disabled\\\" href=\\\"#\\\">Disabled</a>\\n        </li>\\n      </ul>\\n      <form class=\\\"form-inline mt-2 mt-md-0\\\">\\n        <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Username\\\" aria-label=\\\"Search\\\">\\n        <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Password\\\" aria-label=\\\"Search\\\">\\n        <button class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=\\\"submit\\\">Log In</button>\\n      </form>\\n    </div>\\n  </nav>\\n</header>\\n<div style=\\\"text-align:center\\\">\\n<h1>\\n  Welcome to {{ title }}!\\n</h1>\\n<app-items></app-items>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'myapp';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { ItemsComponent } from './items/items.component';\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      ItemsComponent\n   ],\n   imports: [\n      BrowserModule,\n      HttpClientModule,\n      FormsModule\n   ],\n   providers: [],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\" style=\\\"padding-top: 2%\\\">\\n    <div class=\\\"col-lg-3\\\">        \\n        <div class=\\\"card\\\">\\n            <h3 class=\\\"card-header primary-color white-text\\\">Filter</h3>\\n            <form (ngSubmit)=\\\"updateItemList()\\\" #filterForm=\\\"ngForm\\\">\\n                <div class=\\\"card-body\\\">            \\n                  <div class=\\\"form-group\\\">\\n                    <select [(ngModel)]=\\\"this.selectedBrand\\\" name=\\\"selectedBrand\\\" class=\\\"custom-select d-block w-100\\\" style=\\\"margin-bottom: 5%\\\" id=\\\"sel1\\\">\\n                      <option [value]=0>ALL BRANDS</option>\\n                      <option *ngFor=\\\"let brand of brands\\\" [value]=\\\"brand.id\\\">{{brand.name}}</option>\\n                    </select>          \\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <select [(ngModel)]=\\\"this.selectedType\\\" name=\\\"selectedType\\\" class=\\\"custom-select d-block w-100\\\" style=\\\"margin-bottom: 5%\\\" id=\\\"sel2\\\">\\n                        <option [value]=0 >ALL TYPES</option>\\n                        <option *ngFor=\\\"let type of types\\\" [value]=\\\"type.id\\\">{{type.type}}</option>\\n                    </select>                                          \\n                  </div>\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" style=\\\"width: 100%\\\" (on)=\\\"updateItemList()\\\">Filter</button>\\n                </div>\\n              </form>\\n          </div>\\n    </div>\\n  \\n    <!-- /.col-lg-3 -->\\n\\n    <div class=\\\"col-lg-9\\\">\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-4 col-md-6 mb-4\\\" *ngFor=\\\"let item of items\\\">\\n              <div class=\\\"card h-100 w-100\\\">\\n                <a href=\\\"#\\\"><img class=\\\"card-img-top\\\" style=\\\"height: 300px; width: 100%;\\\" src={{item.pictureFileUri}} alt={{item.pictureFileName}}></a>\\n                <div class=\\\"card-footer\\\">        \\n                    <h4 class=\\\"card-title\\\">\\n                      {{item.name}}\\n                    </h4>\\n                    <h5>${{item.price}}</h5>\\n                    \\n                </div>\\n                <div class=\\\"card-footer\\\" style=\\\"padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;\\\">        \\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" style=\\\"margin: 0px 0px 0px 0px; width: 100%\\\">Add to Cart</button>\\n                </div>\\n              </div>\\n            </div>              \\n      </div>\\n      \\n      <!-- /.row -->\\n\\n    </div>\\n    <!-- /.col-lg-9 -->\\n\\n  </div>\\n  <!-- /.row -->\\n\\n</div>\\n<!-- /.container -->\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-items',\n  templateUrl: './items.component.html',\n  styleUrls: ['./items.component.css']\n})\nexport class ItemsComponent implements OnInit {\n  urlBase = 'http://netflames-catalog.herokuapp.com/api/catalog/';\n  items: any;\n  brands: any;\n  types: any;\n  selectedBrand: any;\n  selectedType: any;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    this.getItems();\n    this.getBrands();\n    this.getTypes();\n  }\n\n  updateItemList() {\n    this.getItems(this.selectedBrand, this.selectedType);\n  }\n\n  getItems(filterBrand: number = 0, filterType: number = 0) {\n    if (filterBrand === 0 && filterType === 0)  {\n      this.http.get( this.urlBase + 'item' ).subscribe(response => {\n        this.items = response;\n      }, error => {\n        console.error(error);\n      });\n      return;\n    }\n\n    if (filterBrand >= 1 && filterType <= 0)  {\n        this.http.get(this.urlBase + 'item/brand/' + filterBrand).subscribe(response => {\n        this.items = response;\n      }, error => {\n        console.error(error);\n      });\n      return;\n    }\n\n    if (filterType >= 1 && filterBrand <= 0)  {\n      this.http.get(this.urlBase + 'item/type/' + filterType).subscribe(response => {\n        this.items = response;\n      }, error => {\n        console.error(error);\n      });\n      return;\n    }\n\n    if (filterType >= 1 && filterBrand >= 1)  {\n      this.http.get(this.urlBase + 'item/filter/' + filterBrand + '/' + filterType).subscribe(response => {\n        this.items = response;\n      }, error => {\n        console.error(error);\n      });\n      return;\n    }\n  }\n\n  getBrands() {\n    this.http.get(this.urlBase + 'brand').subscribe(response => {\n      this.brands = response;\n    }, error => {\n      console.error(error);\n    });\n  }\n\n  getTypes() {\n    this.http.get(this.urlBase + 'type').subscribe(response => {\n      this.types = response;\n    }, error => {\n      console.error(error);\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}